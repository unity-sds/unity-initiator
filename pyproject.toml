[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "unity-initiator"
dynamic = ["version"]
description = 'Unity Initiator Framework'
readme = "README.md"
requires-python = ">=3.9"
license = "Apache-2.0"
keywords = []
authors = [
  { name = "Gerald Manipon", email = "pymonger@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "importlib_resources~=6.4.0",
  "pytest~=8.2.0",
  "scripttest~=1.3",
  "mock~=5.1.0",
  "mockito~=1.5.0",
  "flake8~=7.0.0",
  "pytest-cov~=5.0.0",
  "flake8-junit-report~=2.1.0",
  "flake8-string-format~=0.3.0",
  "yamale~=5.2.1",
  "prospector~=0.12.2",
  "moto[all]~=5.0.6",
  "httpx~=0.27.0",
  "respx~=0.21.1",
  "docker~=7.0.0",
  # TODO: remove cryptography pin when this issue resolved:
  # cryptography/hazmat/bindings/_rust.abi3.so: cannot open shared object file: No such file or directory
  "cryptography<35.0.0",
]

[project.urls]
Documentation = "https://github.com/unity-sds/unity-initiator#readme"
Issues = "https://github.com/unity-sds/unity-initiator/issues"
Source = "https://github.com/unity-sds/unity-initiator"

[tool.hatch.version]
path = "src/unity_initiator/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/unity_initiator tests}"

[tool.coverage.run]
source_pkgs = ["unity_initiator", "tests"]
branch = true
parallel = true
omit = [
  "src/unity_initiator/__about__.py",
]

[tool.coverage.paths]
unity_initiator = ["src/unity_initiator", "*/unity-initiator/src/unity_initiator"]
tests = ["tests", "*/unity-initiator/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
